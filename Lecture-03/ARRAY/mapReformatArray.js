// kvArray: อาร์เรย์ที่ประกอบด้วยออบเจ็กต์ 3 ตัว แต่ละตัวมีสองฟิลด์คือ key และ value เช่น:

const kvArray = [
    { key: 1, value: 10 },
    { key: 2, value: 20 },
    { key: 3, value: 30 },
];


const reformattedArray = kvArray.map(({ key, value }) => ({ [key]: value }));
// การใช้ map() เพื่อแปลงข้อมูล 
// 1.map(): ใช้เพื่อสร้างอาร์เรย์ใหม่จากการแปลงค่าของสมาชิกแต่ละตัวในอาร์เรย์ต้นฉบับ
// 2.({ key, value }): ใช้ destructuring เพื่อแยกค่าของ key และ value จากออบเจ็กต์แต่ละตัวใน kvArray
// 3.({ [key]: value }): ใช้ computed property names เพื่อสร้างออบเจ็กต์ใหม่โดยกำหนดชื่อฟิลด์จากค่า key และค่าของฟิลด์จาก value
//      3.1ตัวอย่างการแปลง:
//          3.1.1 จาก { key: 1, value: 10 } เป็น { 1: 10 }
//          3.1.2 จาก { key: 2, value: 20 } เป็น { 2: 20 }
//          3.1.3 จาก { key: 3, value: 30 } เป็น { 3: 30 }



console.log(reformattedArray); //[{ 1: 10 }, { 2: 20 }, { 3: 30 }]
// reformattedArray: เป็นอาร์เรย์ใหม่ที่ประกอบด้วยออบเจ็กต์ซึ่งฟิลด์ key และ value ถูกแปลงเป็นฟิลด์เดียวที่ใช้ค่า key เป็นชื่อฟิลด์ และค่า value เป็นค่าของฟิลด์

console.log(kvArray);
// kvArray: อาร์เรย์ต้นฉบับไม่ได้รับผลกระทบจาก map() (การแปลงเกิดขึ้นในอาร์เรย์ใหม่ reformattedArray เท่านั้น)






// สรุป
// 1.map() ใช้เพื่อแปลงค่าของสมาชิกในอาร์เรย์ต้นฉบับให้เป็นอาร์เรย์ใหม่
// 2.kvArray ยังคงไม่เปลี่ยนแปลงหลังการใช้ map()
// 3.ผลลัพธ์ของการแปลงคืออาร์เรย์ใหม่ที่โครงสร้างของออบเจ็กต์เปลี่ยนไปตามฟังก์ชันที่กำหนดใน map()